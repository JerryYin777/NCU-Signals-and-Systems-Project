function varargout = DSP_export(varargin)
% DSP_export MATLAB code for DSP_export.fig
%      DSP_export, by itself, creates a new DSP_export or raises the existing
%      singleton*.
%
%      H = DSP_export returns the handle to a new DSP_export or the handle to
%      the existing singleton*.
%
%      DSP_export('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in DSP_export.M with the given input arguments.
%
%      DSP_export('Property','Value',...) creates a new DSP_export or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before DSP_export_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to DSP_export_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help DSP_export

% Last Modified by GUIDE v2.5 13-Dec-2015 19:13:00

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @DSP_export_OpeningFcn, ...
                   'gui_OutputFcn',  @DSP_export_OutputFcn, ...
                   'gui_LayoutFcn',  @DSP_export_LayoutFcn, ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before DSP_export is made visible.
function DSP_export_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to DSP_export (see VARARGIN)

% Choose default command line output for DSP_export
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes DSP_export wait for user response (see UIRESUME)
% uiwait(handles.main);


% --- Outputs from this function are returned to the command line.
function varargout = DSP_export_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --------------------------------------------------------------------
function file_Callback(hObject, eventdata, handles)
% hObject    handle to file (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function noise_Callback(hObject, eventdata, handles)
% hObject    handle to noise (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function filter_Callback(hObject, eventdata, handles)
% hObject    handle to filter (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function help_Callback(hObject, eventdata, handles)
% hObject    handle to help (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function help_doc_Callback(hObject, eventdata, handles)
% hObject    handle to help_doc (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function about_Callback(hObject, eventdata, handles)
% hObject    handle to about (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
string =str2mat('    开发：北京科技大学――胡成成',[],'     特别鸣谢：杨老师数字信号课程指导');
msgbox(string);

% --------------------------------------------------------------------
function IIR_Callback(hObject, eventdata, handles)
% hObject    handle to IIR (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function FIR_Callback(hObject, eventdata, handles)
% hObject    handle to FIR (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function flat_noise_Callback(hObject, eventdata, handles)
% hObject    handle to flat_noise (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

set(handles.L1,'Visible','off');
set(handles.L2,'Visible','off');
set(handles.L3,'Visible','off');
set(handles.L4,'Visible','off');
set(handles.E1,'Visible','off');
set(handles.E2,'Visible','off');
set(handles.E3,'Visible','off');
set(handles.E4,'Visible','off');
set(handles.single_run,'Enable','off');
set(handles.multi_run,'Enable','off');
set(handles.IIR_run,'Enable','off');
set(handles.FIR_run,'Enable','off');

wav = evalin('base','data');
fs = evalin('base','Fs');
reswav = awgn(wav,20);%添加信噪比为10dB的高斯噪声
assignin('base','resdata',reswav);
fftwav = abs(fft(reswav));
axes(handles.Time);
x = (0:length(reswav)-1)/fs;
handles.Line1 = plot(x,reswav);
guidata(hObject,handles);%保存值
set(handles.Time,'XMinorTick','on');
grid on;
xlabel('时间/s');
ylabel('幅度');
title('时域图');


axes(handles.Freq);
xf = (0:length(reswav)-1)'*fs/length(fftwav);
handles.Line2 = plot(xf,fftwav);
guidata(hObject,handles);%保存值
set(handles.Freq,'XMinorTick','on');
grid on;
xlabel('频率/Hz');
ylabel('幅度');
title('频域图');
assignin('base','flag',1);

handles.sou = audioplayer(reswav,fs);
guidata(hObject,handles);%保存值

% --------------------------------------------------------------------
function single_Callback(hObject, eventdata, handles)
% hObject    handle to single (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function multi_Callback(hObject, eventdata, handles)
% hObject    handle to multi (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function open_Callback(hObject, eventdata, handles)
% hObject    handle to open (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
[filename,pathname] = uigetfile('*.wav;*.mp3','请选择声音文件', 'MultiSelect', 'off');
[wav,fs]=audioread(strcat(pathname,filename));
wav = wav(:,1);
handles.sou = audioplayer(wav,fs);
guidata(hObject,handles);%保存值
assignin('base','data',wav);
assignin('base','Fs',fs);

set(handles.L1,'Visible','off');
set(handles.L2,'Visible','off');
set(handles.L3,'Visible','off');
set(handles.L4,'Visible','off');
set(handles.E1,'Visible','off');
set(handles.E2,'Visible','off');
set(handles.E3,'Visible','off');
set(handles.E4,'Visible','off');

set(handles.button_play,'Visible','off');
set(handles.Time,'Visible','off');
set(handles.Freq,'Visible','off');

set(handles.single_run,'Enable','off');
set(handles.multi_run,'Enable','off');
set(handles.IIR_run,'Enable','off');
set(handles.FIR_run,'Enable','off');

set(handles.button_play,'Visible','on');
set(handles.Time,'Visible','on');
set(handles.Freq,'Visible','on');
set(handles.noise,'Enable','on');
set(handles.filter,'Enable','on');
set(handles.button_play,'String','播放');
assignin('base','ps',0);

reswav = wav;
assignin('base','resdata',reswav); 
fftwav = abs(fft(reswav));
axes(handles.Time);
x = (0:length(reswav)-1)/fs;
handles.Line1 = plot(x,reswav);
guidata(hObject,handles);%保存值
set(handles.Time,'XMinorTick','on');
grid on;
xlabel('时间/s');
ylabel('幅度');
title('时域图');

axes(handles.Freq);
xf = (0:length(reswav)-1)'*fs/length(fftwav);
handles.Line2 = plot(xf,fftwav);
guidata(hObject,handles);%保存值
set(handles.Freq,'XMinorTick','on');
grid on;
xlabel('频率/Hz');
ylabel('幅度');
title('频域图');
assignin('base','flag',1);

% --------------------------------------------------------------------
function close_Callback(hObject, eventdata, handles)
% hObject    handle to close (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
clc;
clear all;
close;

% --- Executes on button press in button_play.
function button_play_Callback(hObject, eventdata, handles)
% hObject    handle to button_play (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
ps = evalin('base','ps');
if(ps == 0)
    set(handles.button_play,'String','停止');
    assignin('base','ps',1); 
	play(handles.sou);
end;
if(ps == 1)
    set(handles.button_play,'String','播放');
    assignin('base','ps',0);
    stop(handles.sou);
end;
%sound(evalin('base','resdata'),evalin('base','Fs'));

% --------------------------------------------------------------------
function record_Callback(hObject, eventdata, handles)
% hObject    handle to record (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
set(handles.L1,'Visible','off');
set(handles.L2,'Visible','off');
set(handles.L3,'Visible','off');
set(handles.L4,'Visible','off');
set(handles.E1,'Visible','off');
set(handles.E2,'Visible','off');
set(handles.E3,'Visible','off');
set(handles.E4,'Visible','off');

set(handles.button_play,'Visible','off');
set(handles.Time,'Visible','off');
set(handles.Freq,'Visible','off');

set(handles.noise,'Enable','off');
set(handles.filter,'Enable','off');

set(handles.single_run,'Enable','off');
set(handles.multi_run,'Enable','off');
set(handles.IIR_run,'Enable','off');
set(handles.FIR_run,'Enable','off');
set(handles.button_play,'String','播放');
assignin('base','ps',0);
%--------------------------------%
if (evalin('base','flag')==1)
    set(handles.Line1,'Visible','off');
    set(handles.Line2,'Visible','off');
end;
%--------------------------------%
fs = evalin('base','Fs');

set(handles.text3,'ForegroundColor','red');
set(handles.text3,'String','录音准备');
set(handles.text3,'Visible','on');
pause(2);
set(handles.text3,'ForegroundColor',[0 0.749 0.749]);
set(handles.text3,'String','录音中…'); %目前任然无法解决前0.5s左右不能录音，貌似录音语句是并行执行，未知T_T没有查到相关资料
%如果这里不加暂停，显示不正常，偶也不知道为啥
pause(0.01);
%wav = wavrecord(evalin('base','record_time')*evalin('base','Fs'),evalin('base','Fs'),1);         %录音
%index = audiorecorder(evalin('base','record_time')*evalin('base','Fs'),evalin('base','Fs'),1);         %录音
R = audiorecorder(fs,16,1);         %录音
record(R);
pause(10);
stop(R);
wav = getaudiodata(R);
handles.sou = audioplayer(wav,fs);
guidata(hObject,handles);%保存值
set(handles.text3,'ForegroundColor','blue');
set(handles.text3,'String','录音结束');
pause(2);
set(handles.text3,'Visible','off');
wav = wav(:,1);
assignin('base','data',wav);
set(handles.button_play,'Visible','on');
set(handles.Time,'Visible','on');
set(handles.Freq,'Visible','on');
set(handles.noise,'Enable','on');
set(handles.filter,'Enable','on');
reswav = wav;
assignin('base','resdata',reswav); 
assignin('base','resdata',reswav);
fftwav = abs(fft(reswav));
axes(handles.Time);
x = (0:length(reswav)-1)/fs;
handles.Line1 = plot(x,reswav);
guidata(hObject,handles);%保存值
set(handles.Time,'XMinorTick','on');
grid on;
xlabel('时间/s');
ylabel('幅度');
title('时域图');

axes(handles.Freq);
xf = (0:length(reswav)-1)'*fs/length(fftwav);
handles.Line2 = plot(xf,fftwav);
guidata(hObject,handles);%保存值
set(handles.Freq,'XMinorTick','on');
grid on;
xlabel('频率/Hz');
ylabel('幅度');
title('频域图');
assignin('base','flag',1);

% --- Executes during object creation, after setting all properties.
function main_CreateFcn(hObject, eventdata, handles)    %窗体被创建时
% hObject    handle to main (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called
clc;
clear all;
fs = 8192;
assignin('base','data',0);  %在base空间定义data，声音数据
assignin('base','Fs',8192);%在base空间定义Fs，声音数据采样率
assignin('base','record_time',10);%在base空间定义record_time，录音时长10s
assignin('base','resdata',0);  %保存处理结果
assignin('base','flag',0); 
assignin('base','ps',0); 


% --------------------------------------------------------------------
function uipushtool1_ClickedCallback(hObject, eventdata, handles)
% hObject    handle to uipushtool1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global wav;
global reswav;
global fs;
[filename,pathname] = uigetfile('*.wav','请选择声音文件', 'MultiSelect', 'off');
[wav,fs]=audioread(strcat(pathname,filename));
wav = wav(:,1);
assignin('base','data',wav);
assignin('base','Fs',fs);
set(handles.button_play,'Visible','on');
set(handles.Time,'Visible','on');
set(handles.Freq,'Visible','on');
set(handles.noise,'Enable','on');
set(handles.filter,'Enable','on');
reswav = wav;
assignin('base','resdata',reswav); 
fftwav = abs(fft(reswav));
axes(handles.Time);
x = (0:length(reswav)-1)/fs;
handles.Line1 = plot(x,reswav);%保存曲线的句柄
guidata(hObject,handles);%保存值
set(handles.Time,'XMinorTick','on');
grid on;
xlabel('时间/s');
ylabel('幅度');
title('时域图');

axes(handles.Freq);
xf = (0:length(reswav)-1)'*fs/length(fftwav);
handles.Line2 =plot(xf,fftwav);
guidata(hObject,handles);%保存值
set(handles.Freq,'XMinorTick','on');
grid on;
xlabel('频率/Hz');
ylabel('幅度');
title('频域图');
assignin('base','flag',1);



function E1_Callback(hObject, eventdata, handles)
% hObject    handle to E1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of E1 as text
%        str2double(get(hObject,'String')) returns contents of E1 as a double


% --- Executes during object creation, after setting all properties.
function E1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to E1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function E2_Callback(hObject, eventdata, handles)
% hObject    handle to E2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of E2 as text
%        str2double(get(hObject,'String')) returns contents of E2 as a double


% --- Executes during object creation, after setting all properties.
function E2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to E2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function E3_Callback(hObject, eventdata, handles)
% hObject    handle to E3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of E3 as text
%        str2double(get(hObject,'String')) returns contents of E3 as a double


% --- Executes during object creation, after setting all properties.
function E3_CreateFcn(hObject, eventdata, handles)
% hObject    handle to E3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function E4_Callback(hObject, eventdata, handles)
% hObject    handle to E4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of E4 as text
%        str2double(get(hObject,'String')) returns contents of E4 as a double


% --- Executes during object creation, after setting all properties.
function E4_CreateFcn(hObject, eventdata, handles)
% hObject    handle to E4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --------------------------------------------------------------------
function multi_input_Callback(hObject, eventdata, handles)
% hObject    handle to multi_input (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
set(handles.L1,'Visible','off');
set(handles.L2,'Visible','off');
set(handles.L3,'Visible','off');
set(handles.L4,'Visible','off');
set(handles.E1,'Visible','off');
set(handles.E2,'Visible','off');
set(handles.E3,'Visible','off');
set(handles.E4,'Visible','off');
set(handles.IIR_run,'Enable','off');
set(handles.FIR_run,'Enable','off');
set(handles.single_run,'Enable','off');
set(handles.multi_run,'Enable','on');

set(handles.L1,'String','多频噪声1频率/Hz');
set(handles.E1,'String','3000');
set(handles.L2,'String','多频噪声2频率/Hz');
set(handles.E2,'String','2500');
set(handles.L1,'Visible','on');
set(handles.E1,'Visible','on');
set(handles.L2,'Visible','on');
set(handles.E2,'Visible','on');

% --------------------------------------------------------------------
function multi_run_Callback(hObject, eventdata, handles)
% hObject    handle to multi_run (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
wav = evalin('base','data');
fs = evalin('base','Fs');

ts = 1/fs;
t = 0:ts:(length(wav)-1)*ts;
t = t';
fn1 = str2double(get(handles.E1,'String'));
fn2 = str2double(get(handles.E2,'String'));
if(fn1>fs/2 || fn1>fs/2 )
    string =str2mat('参数错误');
    msgbox(string);
    return;
end;
%Ps=sum(sum((wav-mean(mean(wav))).^2));%signal power
single_noise = max(wav)*0.1*sin(2*pi*fn1*t) + max(wav)*0.1*sin(2*pi*fn2*t);
reswav = wav + single_noise;
assignin('base','resdata',reswav); 
fftwav = abs(fft(reswav));
axes(handles.Time);
x = (0:length(reswav)-1)/fs;
handles.Line1 =plot(x,reswav);
guidata(hObject,handles);%保存值
set(handles.Time,'XMinorTick','on');
grid on;
xlabel('时间/s');
ylabel('幅度');
title('时域图');

axes(handles.Freq);
xf = (0:length(reswav)-1)'*fs/length(fftwav);
handles.Line2 =plot(xf,fftwav);
guidata(hObject,handles);%保存值
set(handles.Freq,'XMinorTick','on');
grid on;
xlabel('频率/Hz');
ylabel('幅度');
title('频域图');
assignin('base','flag',1);

handles.sou = audioplayer(reswav,fs);
guidata(hObject,handles);%保存值

% --------------------------------------------------------------------
function single_input_Callback(hObject, eventdata, handles)
% hObject    handle to single_input (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
set(handles.L1,'Visible','off');
set(handles.L2,'Visible','off');
set(handles.L3,'Visible','off');
set(handles.L4,'Visible','off');
set(handles.E1,'Visible','off');
set(handles.E2,'Visible','off');
set(handles.E3,'Visible','off');
set(handles.E4,'Visible','off');
set(handles.IIR_run,'Enable','off');
set(handles.FIR_run,'Enable','off');
set(handles.multi_run,'Enable','off');
set(handles.single_run,'Enable','on');
set(handles.L1,'String','单频噪声频率/Hz');
set(handles.E1,'String','3000');
set(handles.L1,'Visible','on');
set(handles.E1,'Visible','on');

% --------------------------------------------------------------------
function single_run_Callback(hObject, eventdata, handles)
% hObject    handle to single_run (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
wav = evalin('base','data');
fs = evalin('base','Fs');

ts = 1/fs;
t = 0:ts:(length(wav)-1)*ts;
t = t';
fn = str2double(get(handles.E1,'String'));
if(fn > fs/2)
    string =str2mat('参数错误');
    msgbox(string);
    return;
end;
%Ps=sum(sum((wav-mean(mean(wav))).^2));%signal power
single_noise = max(wav)*0.5*sin(2*pi*fn*t);
reswav = wav + single_noise;
assignin('base','resdata',reswav); 
fftwav = abs(fft(reswav));
axes(handles.Time);
x = (0:length(reswav)-1)/fs;
handles.Line1 =plot(x,reswav);
guidata(hObject,handles);%保存值
set(handles.Time,'XMinorTick','on');
grid on;
xlabel('时间/s');
ylabel('幅度');
title('时域图');

axes(handles.Freq);
xf = (0:length(reswav)-1)'*fs/length(fftwav);
handles.Line2 =plot(xf,fftwav);
guidata(hObject,handles);%保存值
set(handles.Freq,'XMinorTick','on');
grid on;
xlabel('频率/Hz');
ylabel('幅度');
title('频域图');
assignin('base','flag',1);

handles.sou = audioplayer(reswav,fs);
guidata(hObject,handles);%保存值


% --------------------------------------------------------------------
function FIR_input_Callback(hObject, eventdata, handles)
% hObject    handle to FIR_input (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
set(handles.L1,'Visible','off');
set(handles.L2,'Visible','off');
set(handles.L3,'Visible','off');
set(handles.L4,'Visible','off');
set(handles.E1,'Visible','off');
set(handles.E2,'Visible','off');
set(handles.E3,'Visible','off');
set(handles.E4,'Visible','off');
set(handles.single_run,'Enable','off');
set(handles.multi_run,'Enable','off');
set(handles.IIR_run,'Enable','off');
set(handles.FIR_run,'Enable','on');

set(handles.L1,'String','截至频率Wp/KHz');
set(handles.E1,'String','0.20');

set(handles.L2,'String','阻带截至Ws/KHz');
set(handles.E2,'String','0.25');

set(handles.L3,'String','波纹Rp/dB');
set(handles.E3,'String','1');

set(handles.L4,'String','阻带衰减Rs/dB');
set(handles.E4,'String','50');

set(handles.L1,'Visible','on');
set(handles.L2,'Visible','on');
% set(handles.L3,'Visible','on');
set(handles.L4,'Visible','on');
set(handles.E1,'Visible','on');
set(handles.E2,'Visible','on');
% set(handles.E3,'Visible','on');
set(handles.E4,'Visible','on');
set(handles.E4,'Enable','on');
set(handles.E4,'Enable','off');

% --------------------------------------------------------------------
function FIR_run_Callback(hObject, eventdata, handles)
% hObject    handle to FIR_run (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
wav = evalin('base','resdata');
fs = evalin('base','Fs');
Wp = str2double(get(handles.E1,'String'));
Ws = str2double(get(handles.E2,'String'));
Rp = str2double(get(handles.E3,'String'));
Rs = str2double(get(handles.E4,'String'));
reswav = FIR_filter(Wp,Ws,Rp,Rs,wav,fs);
assignin('base','resdata',reswav);

fftwav = abs(fft(reswav));
axes(handles.Time);
x = (0:length(reswav)-1)/fs;
handles.Line1 =plot(x,reswav);
guidata(hObject,handles);%保存值
set(handles.Time,'XMinorTick','on');
grid on;
xlabel('时间/s');
ylabel('幅度');
title('时域图');

axes(handles.Freq);
xf = (0:length(reswav)-1)'*fs/length(fftwav);
handles.Line2 =plot(xf,fftwav);
guidata(hObject,handles);%保存值
set(handles.Freq,'XMinorTick','on');
grid on;
xlabel('频率/Hz');
ylabel('幅度');
title('频域图');

handles.sou = audioplayer(reswav,fs);
guidata(hObject,handles);%保存值

% --------------------------------------------------------------------
function IIR_input_Callback(hObject, eventdata, handles)
% hObject    handle to IIR_input (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
set(handles.L1,'Visible','off');
set(handles.L2,'Visible','off');
set(handles.L3,'Visible','off');
set(handles.L4,'Visible','off');
set(handles.E1,'Visible','off');
set(handles.E2,'Visible','off');
set(handles.E3,'Visible','off');
set(handles.E4,'Visible','off');
set(handles.single_run,'Enable','off');
set(handles.multi_run,'Enable','off');
set(handles.IIR_run,'Enable','on');
set(handles.FIR_run,'Enable','off');

set(handles.L1,'String','截至频率Wp/KHz');
set(handles.E1,'String','0.20');

set(handles.L2,'String','阻带截至Ws/KHz');
set(handles.E2,'String','0.25');

set(handles.L3,'String','波纹Rp/dB');
set(handles.E3,'String','1');

set(handles.L4,'String','阻带衰减Rs/dB');
set(handles.E4,'String','15');

set(handles.L1,'Visible','on');
set(handles.L2,'Visible','on');
set(handles.L3,'Visible','on');
set(handles.L4,'Visible','on');
set(handles.E1,'Visible','on');
set(handles.E2,'Visible','on');
set(handles.E3,'Visible','on');
set(handles.E4,'Visible','on');

% --------------------------------------------------------------------
function IIR_run_Callback(hObject, eventdata, handles)
% hObject    handle to IIR_run (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
wav = evalin('base','resdata');
fs = evalin('base','Fs');
Wp = str2double(get(handles.E1,'String'));
Ws = str2double(get(handles.E2,'String'));
Rp = str2double(get(handles.E3,'String'));
Rs = str2double(get(handles.E4,'String'));
reswav = IIR_filter(Wp,Ws,Rp,Rs,wav,fs);
assignin('base','resdata',reswav);
fftwav = abs(fft(reswav));
axes(handles.Time);
x = (0:length(reswav)-1)/fs;
handles.Line1 =plot(x,reswav);
guidata(hObject,handles);%保存值
set(handles.Time,'XMinorTick','on');
grid on;
xlabel('时间/s');
ylabel('幅度');
title('时域图');

axes(handles.Freq);
xf = (0:length(reswav)-1)'*fs/length(fftwav);
handles.Line2 =plot(xf,fftwav);
guidata(hObject,handles);%保存值
set(handles.Freq,'XMinorTick','on');
grid on;
xlabel('频率/Hz');
ylabel('幅度');
title('频域图');

handles.sou = audioplayer(reswav,fs);
guidata(hObject,handles);%保存值


% --- Creates and returns a handle to the GUI figure. 
function h1 = DSP_export_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end
load DSP_export.mat


appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h', [], ...
    'taginfo', struct(...
    'figure', 2, ...
    'axes', 3, ...
    'pushbutton', 3, ...
    'text', 8, ...
    'uitoolbar', 2, ...
    'uipushtool', 2, ...
    'uitoggletool', 4, ...
    'edit', 8), ...
    'override', 0, ...
    'release', 13, ...
    'resize', 'none', ...
    'accessibility', 'callback', ...
    'mfile', 1, ...
    'callbacks', 1, ...
    'singleton', 1, ...
    'syscolorfig', 1, ...
    'blocking', 0, ...
    'lastSavedFile', 'C:\Users\lenovo\Desktop\声音处理示例程序（公测版）\DSP_export.m', ...
    'lastFilename', 'F:\Matlab Folder\DSP\GUI_DSP\DSP.fig');
appdata.lastValidTag = 'main';
appdata.GUIDELayoutEditor = [];
appdata.initTags = struct(...
    'handle', [], ...
    'tag', 'main');

h1 = figure(...
'Units','characters',...
'Color',[0.941176470588235 0.941176470588235 0.941176470588235],...
'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
'IntegerHandle','off',...
'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
'MenuBar','none',...
'Name','声音信号处理示例程序',...
'NumberTitle','off',...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'Position',[103.8 14.5384615384615 186.4 46.9230769230769],...
'Resize','off',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)DSP_export('main_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'HandleVisibility','callback',...
'UserData',[],...
'Tag','main',...
'Visible','on');

appdata = [];
appdata.lastValidTag = 'file';

h2 = uimenu(...
'Parent',h1,...
'Accelerator','O',...
'Callback',@(hObject,eventdata)DSP_export('file_Callback',hObject,eventdata,guidata(hObject)),...
'Label','文件',...
'Tag','file',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'open';

h3 = uimenu(...
'Parent',h2,...
'Callback',@(hObject,eventdata)DSP_export('open_Callback',hObject,eventdata,guidata(hObject)),...
'Label','打开声音文件',...
'Tag','open',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'record';

h4 = uimenu(...
'Parent',h2,...
'Callback',@(hObject,eventdata)DSP_export('record_Callback',hObject,eventdata,guidata(hObject)),...
'Label','录音10秒',...
'ButtonDownFcn',@(hObject,eventdata)DSP_export('record_ButtonDownFcn',hObject,eventdata,guidata(hObject)),...
'Tag','record',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'close';

h5 = uimenu(...
'Parent',h2,...
'Callback',@(hObject,eventdata)DSP_export('close_Callback',hObject,eventdata,guidata(hObject)),...
'Label','关闭',...
'Tag','close',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'noise';

h6 = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)DSP_export('noise_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Label','叠加噪声',...
'Tag','noise',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'flat_noise';

h7 = uimenu(...
'Parent',h6,...
'Callback',@(hObject,eventdata)DSP_export('flat_noise_Callback',hObject,eventdata,guidata(hObject)),...
'Label','叠加白噪声',...
'Tag','flat_noise',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'single';

h8 = uimenu(...
'Parent',h6,...
'Callback',@(hObject,eventdata)DSP_export('single_Callback',hObject,eventdata,guidata(hObject)),...
'Label','单频噪声',...
'Tag','single',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'single_input';

h9 = uimenu(...
'Parent',h8,...
'Callback',@(hObject,eventdata)DSP_export('single_input_Callback',hObject,eventdata,guidata(hObject)),...
'Label','单频噪声参数输入',...
'Tag','single_input',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'single_run';

h10 = uimenu(...
'Parent',h8,...
'Callback',@(hObject,eventdata)DSP_export('single_run_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Label','叠加单频噪声',...
'Tag','single_run',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'multi';

h11 = uimenu(...
'Parent',h6,...
'Callback',@(hObject,eventdata)DSP_export('multi_Callback',hObject,eventdata,guidata(hObject)),...
'Label','多频噪声',...
'Tag','multi',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'multi_input';

h12 = uimenu(...
'Parent',h11,...
'Callback',@(hObject,eventdata)DSP_export('multi_input_Callback',hObject,eventdata,guidata(hObject)),...
'Label','多频噪声参数输入',...
'Tag','multi_input',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'multi_run';

h13 = uimenu(...
'Parent',h11,...
'Callback',@(hObject,eventdata)DSP_export('multi_run_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Label','叠加多频噪声',...
'Tag','multi_run',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'filter';

h14 = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)DSP_export('filter_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Label','滤波器设计',...
'Tag','filter',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'IIR';

h15 = uimenu(...
'Parent',h14,...
'Callback',@(hObject,eventdata)DSP_export('IIR_Callback',hObject,eventdata,guidata(hObject)),...
'Label','IIR设计',...
'Tag','IIR',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'IIR_input';

h16 = uimenu(...
'Parent',h15,...
'Callback',@(hObject,eventdata)DSP_export('IIR_input_Callback',hObject,eventdata,guidata(hObject)),...
'Label','参数输入',...
'Tag','IIR_input',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'IIR_run';

h17 = uimenu(...
'Parent',h15,...
'Callback',@(hObject,eventdata)DSP_export('IIR_run_Callback',hObject,eventdata,guidata(hObject)),...
'Label','运行',...
'Tag','IIR_run',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'FIR';

h18 = uimenu(...
'Parent',h14,...
'Callback',@(hObject,eventdata)DSP_export('FIR_Callback',hObject,eventdata,guidata(hObject)),...
'Label','FIR设计',...
'Tag','FIR',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'FIR_input';

h19 = uimenu(...
'Parent',h18,...
'Callback',@(hObject,eventdata)DSP_export('FIR_input_Callback',hObject,eventdata,guidata(hObject)),...
'Label','参数输入',...
'Tag','FIR_input',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'FIR_run';

h20 = uimenu(...
'Parent',h18,...
'Callback',@(hObject,eventdata)DSP_export('FIR_run_Callback',hObject,eventdata,guidata(hObject)),...
'Label','运行',...
'Tag','FIR_run',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'help';

h21 = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)DSP_export('help_Callback',hObject,eventdata,guidata(hObject)),...
'Label','帮助',...
'Tag','help',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'help_doc';

h22 = uimenu(...
'Parent',h21,...
'Callback',@(hObject,eventdata)DSP_export('help_doc_Callback',hObject,eventdata,guidata(hObject)),...
'Label','帮助文档',...
'Tag','help_doc',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'about';

h23 = uimenu(...
'Parent',h21,...
'Callback',@(hObject,eventdata)DSP_export('about_Callback',hObject,eventdata,guidata(hObject)),...
'Label','关于',...
'Tag','about',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Time';

h24 = axes(...
'Parent',h1,...
'Units','characters',...
'Position',[16 27.6153846153846 132.2 17],...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'LooseInset',[20.566 5.16153846153846 15.029 3.51923076923077],...
'XColor',get(0,'defaultaxesXColor'),...
'YColor',get(0,'defaultaxesYColor'),...
'ZColor',get(0,'defaultaxesZColor'),...
'ButtonDownFcn',@(hObject,eventdata)DSP_export('Time_ButtonDownFcn',hObject,eventdata,guidata(hObject)),...
'Tag','Time',...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

h25 = get(h24,'title');

set(h25,...
'Parent',h24,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.5 1.02941176470588 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h26 = get(h24,'xlabel');

set(h26,...
'Parent',h24,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.498487140695915 -0.106334841628959 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','cap',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h27 = get(h24,'ylabel');

set(h27,...
'Parent',h24,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.0431164901664145 0.495475113122172 1.00005459937205],...
'Rotation',90,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h28 = get(h24,'zlabel');

set(h28,...
'Parent',h24,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.12178517397882 1.1289592760181 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','middle',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

appdata = [];
appdata.lastValidTag = 'Freq';

h29 = axes(...
'Parent',h1,...
'Units','characters',...
'Position',[15.8 4.53846153846154 132.2 17.1538461538462],...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'LooseInset',[20.566 5.16153846153846 15.029 3.51923076923077],...
'XColor',get(0,'defaultaxesXColor'),...
'YColor',get(0,'defaultaxesYColor'),...
'ZColor',get(0,'defaultaxesZColor'),...
'Tag','Freq',...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

h30 = get(h29,'title');

set(h30,...
'Parent',h29,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.5 1.02914798206278 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h31 = get(h29,'xlabel');

set(h31,...
'Parent',h29,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.498487140695915 -0.105381165919283 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','cap',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h32 = get(h29,'ylabel');

set(h32,...
'Parent',h29,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.0431164901664145 0.495515695067264 1.00005459937205],...
'Rotation',90,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h33 = get(h29,'zlabel');

set(h33,...
'Parent',h29,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.120272314674735 2.46412556053812 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','middle',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

appdata = [];
appdata.lastValidTag = 'button_play';

h34 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Callback',@(hObject,eventdata)DSP_export('button_play_Callback',hObject,eventdata,guidata(hObject)),...
'FontSize',12,...
'FontWeight','demi',...
'Position',[157.6 4.3846153846154 18.4 2.46153846153846],...
'String','播放',...
'ButtonDownFcn',@(hObject,eventdata)DSP_export('button_play_ButtonDownFcn',hObject,eventdata,guidata(hObject)),...
'UserData',0,...
'Tag','button_play',...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uitoolbar1';

h35 = uitoolbar(...
'Parent',h1,...
'Tag','uitoolbar1',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = 'Standard.FileOpen';
appdata.CallbackInUse = struct(...
    'ClickedCallback', 'DSP(''uipushtool1_ClickedCallback'',gcbo,[],guidata(gcbo))');
appdata.lastValidTag = 'uipushtool1';

h36 = uipushtool(...
'Parent',h35,...
'ClickedCallback',@(hObject,eventdata)DSP_export('uipushtool1_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'CData',mat{1},...
'TooltipString','Open File',...
'BusyAction','cancel',...
'Interruptible','off',...
'Tag','uipushtool1',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = 'Exploration.ZoomIn';
appdata.CallbackInUse = struct(...
    'ClickedCallback', '%default');
appdata.lastValidTag = 'uitoggletool1';

h37 = uitoggletool(...
'Parent',h35,...
'ClickedCallback','%default',...
'CData',mat{2},...
'TooltipString','Zoom In',...
'Tag','uitoggletool1',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = 'Exploration.ZoomOut';
appdata.CallbackInUse = struct(...
    'ClickedCallback', '%default');
appdata.lastValidTag = 'uitoggletool2';

h38 = uitoggletool(...
'Parent',h35,...
'ClickedCallback','%default',...
'CData',mat{3},...
'TooltipString','Zoom Out',...
'Tag','uitoggletool2',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = 'Exploration.Pan';
appdata.CallbackInUse = struct(...
    'ClickedCallback', '%default');
appdata.lastValidTag = 'uitoggletool3';

h39 = uitoggletool(...
'Parent',h35,...
'ClickedCallback','%default',...
'CData',mat{4},...
'TooltipString','Pan',...
'Tag','uitoggletool3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text3';

h40 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontName','黑体',...
'FontSize',30,...
'FontWeight','bold',...
'ForegroundColor',[1 0 0],...
'Position',[53.6 22.5384615384615 68.2 4.30769230769231],...
'String','录音准备!!!',...
'Style','text',...
'Tag','text3',...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'E1';

h41 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)DSP_export('E1_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[159.8 39.0769230769231 14.2 2.38461538461538],...
'String',blanks(0),...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)DSP_export('E1_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','E1',...
'Visible','off');

appdata = [];
appdata.lastValidTag = 'E2';

h42 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)DSP_export('E2_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[159.8 30.6153846153847 14.2 2.38461538461538],...
'String',blanks(0),...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)DSP_export('E2_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','E2',...
'Visible','off');

appdata = [];
appdata.lastValidTag = 'E3';

h43 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)DSP_export('E3_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[159.8 22.1538461538462 14.2 2.38461538461538],...
'String',blanks(0),...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)DSP_export('E3_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','E3',...
'Visible','off');

appdata = [];
appdata.lastValidTag = 'E4';

h44 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)DSP_export('E4_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[159.8 13.6923076923077 14.2 2.38461538461538],...
'String',blanks(0),...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)DSP_export('E4_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','E4',...
'Visible','off');

appdata = [];
appdata.lastValidTag = 'L1';

h45 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontSize',15,...
'Position',[151.8 42.1538461538462 32.2 2.38461538461538],...
'String','单频噪声1频率Hz',...
'Style','text',...
'Tag','L1',...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'L2';

h46 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontSize',15,...
'Position',[151.8 33.6923076923078 32.2 2.38461538461538],...
'String','单频噪声2频率Hz',...
'Style','text',...
'Tag','L2',...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'L3';

h47 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontSize',15,...
'Position',[151.8 25.2307692307693 32.2 2.38461538461538],...
'String','单频噪声2频率Hz',...
'Style','text',...
'Tag','L3',...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'L4';

h48 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontSize',15,...
'Position',[151.8 16.7692307692308 32.2 2.38461538461538],...
'String','单频噪声2频率Hz',...
'Style','text',...
'Tag','L4',...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       setappdata(hObject, name, getfield(appdata,name));
   end
end

if ~isempty(createfcn)
   if isa(createfcn,'function_handle')
       createfcn(hObject, eventdata);
   else
       eval(createfcn);
   end
end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

gui_StateFields =  {'gui_Name'
    'gui_Singleton'
    'gui_OpeningFcn'
    'gui_OutputFcn'
    'gui_LayoutFcn'
    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error(message('MATLAB:guide:StateFieldNotFound', gui_StateFields{ i }, gui_Mfile));
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % DSP_EXPORT
    % create the GUI only if we are not in the process of loading it
    % already
    gui_Create = true;
elseif local_isInvokeActiveXCallback(gui_State, varargin{:})
    % DSP_EXPORT(ACTIVEX,...)
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif local_isInvokeHGCallback(gui_State, varargin{:})
    % DSP_EXPORT('CALLBACK',hObject,eventData,handles,...)
    gui_Create = false;
else
    % DSP_EXPORT(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = true;
end

if ~gui_Create
    % In design time, we need to mark all components possibly created in
    % the coming callback evaluation as non-serializable. This way, they
    % will not be brought into GUIDE and not be saved in the figure file
    % when running/saving the GUI from GUIDE.
    designEval = false;
    if (numargin>1 && ishghandle(varargin{2}))
        fig = varargin{2};
        while ~isempty(fig) && ~ishghandle(fig,'figure')
            fig = get(fig,'parent');
        end
        
        designEval = isappdata(0,'CreatingGUIDEFigure') || isprop(fig,'__GUIDEFigure');
    end
        
    if designEval
        beforeChildren = findall(fig);
    end
    
    % evaluate the callback now
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else       
        feval(varargin{:});
    end
    
    % Set serializable of objects created in the above callback to off in
    % design time. Need to check whether figure handle is still valid in
    % case the figure is deleted during the callback dispatching.
    if designEval && ishghandle(fig)
        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end

    % Check user passing 'visible' P/V pair first so that its value can be
    % used by oepnfig to prevent flickering
    gui_Visible = 'auto';
    gui_VisibleInput = '';
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        % Recognize 'visible' P/V pair
        len1 = min(length('visible'),length(varargin{index}));
        len2 = min(length('off'),length(varargin{index+1}));
        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
            if strncmpi(varargin{index+1},'off',len2)
                gui_Visible = 'invisible';
                gui_VisibleInput = 'off';
            elseif strncmpi(varargin{index+1},'on',len2)
                gui_Visible = 'visible';
                gui_VisibleInput = 'on';
            end
        end
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.

    
    % Do feval on layout code in m-file if it exists
    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
    % this application data is used to indicate the running mode of a GUIDE
    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
    % only used by actxproxy at this time.   
    setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);
    if gui_Exported
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

        % make figure invisible here so that the visibility of figure is
        % consistent in OpeningFcn in the exported GUI case
        if isempty(gui_VisibleInput)
            gui_VisibleInput = get(gui_hFigure,'Visible');
        end
        set(gui_hFigure,'Visible','off')

        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen');
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        end
    end
    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))
        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));
    end

    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    % Singleton setting in the GUI M-file takes priority if different
    gui_Options.singleton = gui_State.gui_Singleton;

    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end

    % Apply input P/V pairs other than 'visible'
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        len1 = min(length('visible'),length(varargin{index}));
        if ~strncmpi(varargin{index},'visible',len1)
            try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
        end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end

    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        % Handle the default callbacks of predefined toolbar tools in this
        % GUI, if any
        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
        
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

        % Call openfig again to pick up the saved visibility or apply the
        % one passed in from the P/V pairs
        if ~gui_Exported
            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
        elseif ~isempty(gui_VisibleInput)
            set(gui_hFigure,'Visible',gui_VisibleInput);
        end
        if strcmpi(get(gui_hFigure, 'Visible'), 'on')
            figure(gui_hFigure);
            
            if gui_Options.singleton
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        if isappdata(gui_hFigure,'InGUIInitialization')
            rmappdata(gui_hFigure,'InGUIInitialization');
        end

        % If handle visibility is set to 'callback', turn it on until
        % finished with OutputFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end

    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end

function gui_hFigure = local_openfig(name, singleton, visible)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
if nargin('openfig') == 2
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = openfig(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
else
    gui_hFigure = openfig(name, singleton, visible);  
    %workaround for CreateFcn not called to create ActiveX
    if feature('HGUsingMATLABClasses')
        peers=findobj(findall(allchild(gui_hFigure)),'type','uicontrol','style','text');    
        for i=1:length(peers)
            if isappdata(peers(i),'Control')
                actxproxy(peers(i));
            end            
        end
    end
end

function result = local_isInvokeActiveXCallback(gui_State, varargin)

try
    result = ispc && iscom(varargin{1}) ...
             && isequal(varargin{1},gcbo);
catch
    result = false;
end

function result = local_isInvokeHGCallback(gui_State, varargin)

try
    fhandle = functions(gui_State.gui_Callback);
    result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...
             (ischar(varargin{1}) ...
             && isequal(ishghandle(varargin{2}), 1) ...
             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );
catch
    result = false;
end


